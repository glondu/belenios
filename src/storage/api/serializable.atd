(**************************************************************************)
(*                                BELENIOS                                *)
(*                                                                        *)
(*  Copyright Â© 2024-2024 Inria                                           *)
(*                                                                        *)
(*  This program is free software: you can redistribute it and/or modify  *)
(*  it under the terms of the GNU Affero General Public License as        *)
(*  published by the Free Software Foundation, either version 3 of the    *)
(*  License, or (at your option) any later version, with the additional   *)
(*  exemption that compiling, linking, and/or using OpenSSL is allowed.   *)
(*                                                                        *)
(*  This program is distributed in the hope that it will be useful, but   *)
(*  WITHOUT ANY WARRANTY; without even the implied warranty of            *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     *)
(*  Affero General Public License for more details.                       *)
(*                                                                        *)
(*  You should have received a copy of the GNU Affero General Public      *)
(*  License along with this program.  If not, see                         *)
(*  <http://www.gnu.org/licenses/>.                                       *)
(**************************************************************************)

type election_dates = {
  ?creation : float option;
  ?finalization : float option;
  ?tally : float option;
  ?archive : float option;
  ?last_mail : float option;
  ?auto_open : float option;
  ?auto_close : float option;
  ?publish : float option;
} <ocaml field_prefix="e_date_">

type election_records = (string * float) list <json repr="object">

type decryption_tokens = string list

type skipped_shufflers = string list

type shuffle_token = {
    trustee : string;
    token : string;
    trustee_id : int;
    ?name : string option;
} <ocaml field_prefix="tk_">

type shuffle_state = {
    skipped : skipped_shufflers;
    ?token : shuffle_token option;
}

type some_state_state =
  [ Decryption of decryption_tokens
  | Shuffle of shuffle_state
  ]

type state_state = some_state_state nullable
